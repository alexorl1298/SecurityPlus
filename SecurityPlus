
#Keypad code inspried by Gaven MacDonald https://youtu.be/yYnX5QodqQ4 

import RPi.GPIO as GPIO
import pyrebase, time, signal, sys

GPIO.setwarnings(False)
GPIO.setmode(GPIO.BCM)

IR_GPIO = 14
BUZZER = 18

GREEN = 27
RED = 22

HOME_LIGHT1 = 23
HOME_LIGHT2 = 24

ROW =  [6, 13, 19, 26]
COL = [12, 16, 20, 21]

GPIO.setup(IR_GPIO, GPIO.IN)
GPIO.setup(BUZZER, GPIO.OUT)
GPIO.setup(HOME_LIGHT1, GPIO.OUT)
GPIO.setup(HOME_LIGHT2, GPIO.OUT)
GPIO.setup(RED, GPIO.OUT)
GPIO.setup(GREEN, GPIO.OUT)

for j in range (4):
    GPIO.setup(COL[j], GPIO.OUT)
    GPIO.output(COL[j], 0)

for i in range(4):
    GPIO.setup(ROW[i], GPIO.IN, pull_up_down = GPIO.PUD_DOWN)
    
config = {
    "apiKey": "AIzaSyD-PnsImgyZ-epAEvHSl36iblZhrhddhzg",
    "authDomain": "homesecurityjen.firebaseapp.com",
    "databaseURL": "https://homesecurityjen-default-rtdb.firebaseio.com/",
    "projectId": "homesecurityjen",
    "storageBucket": "homesecurityjen.appspot.com",
    }

firebase = pyrebase.initialize_app(config)

db = firebase.database()

MATRIX = [ ['1', '2', '3', 'A'],
           ['4', '5', '6', 'B'],
           ['7', '8', '9', 'C'],
           ['*', '0', '#', 'D']
        ]

password = "1234#"
resetKey = "A#"
lightKey = "B#"
attemptPass = ""
resetPass = ""
global armed
global motion

armed = False
lightsOn = False
motion = 0
#default set state to false
db.child().update({"Armed":armed})
db.child().update({"motion":'false'})
db.child().update({"LightStat":lightsOn})

GPIO.output(BUZZER,0)#Set buzzer to off initally
GPIO.output(HOME_LIGHT1,0)
GPIO.output(HOME_LIGHT2,0)
GPIO.output(RED,0)
GPIO.output(GREEN,0)
#########################################################################
    
if __name__ == '__main__':
    try:
        while (True):
            if(armed):
                GPIO.output(RED, 1)
                GPIO.output(GREEN, 0)
            else:
                GPIO.output(RED, 0)
                GPIO.output(GREEN, 1)
                
            motion = GPIO.input(IR_GPIO)
  
            if(motion == 1):
                if(armed):
                    GPIO.output(BUZZER,1)
                    db.child().update({"motion":True})
                else:
                    GPIO.output(BUZZER,0)
                    GPIO.output(HOME_LIGHT1,1)
                    GPIO.output(HOME_LIGHT2,1)
                    lightsOn = True
                    db.child().update({"LightStat":lightsOn})
                          
            for j in range(4):
                GPIO.output(COL[j], 1)
                
                for i in range (4):
                    if GPIO.input(ROW[i]) == 1:
                        print (MATRIX [i][j])
                        attemptPass += MATRIX [i][j]
                        print ("Entry: " + attemptPass)
                        print ("Password: " + password)
                        print("Armed: " + str(armed))
                        if(armed):
                            GPIO.output(GREEN,1)
                            time.sleep(0.3)
                            GPIO.output(GREEN,0)
                        else:
                            GPIO.output(RED,1)
                            time.sleep(0.3)
                            GPIO.output(RED,0)
                    
                        if(attemptPass[-1] == "#"):
                            if (password == attemptPass):
                                print("Password Accepted!")
                                time.sleep(0.5)
                            
                                if(armed):
                                    armed = False
                                    print("System disarmed")
                                    db.child().update({"Armed":armed})
                                    db.child().update({"motion":False})
                                    GPIO.output(BUZZER,0)
                                    GPIO.output(GREEN,1)
                                    GPIO.output(RED,0)
                                                                        
                                else:
                                    armed = True
                                    print("System Armed!")
                                    db.child().update({"Armed":armed})
                                    GPIO.output(GREEN,0)
                                    GPIO.output(RED,1)
                                attemptPass = ""
                                break
                                                               
                            elif (attemptPass == resetKey):
                                 print("Enter a new Password")
                                 attemptPass = "*"
                                 
                                 while (attemptPass[-1] != "#"):
                                    for j in range(4):
                                        GPIO.output(COL[j], 1)
                                    
                                        for i in range (4):
                                            if GPIO.input(ROW[i]) == 1:
                                                print (MATRIX [i][j])
                                                if (attemptPass == "*"):
                                                    attemptPass = ""
                                                attemptPass += MATRIX [i][j]
                                                print ("Entry: " + attemptPass)
                                                while(GPIO.input(ROW[i]) == 1):
                                                    time.sleep(0.2)
                                                    pass
                                        GPIO.output(COL[j], 0)
                                 else:
                                     if(attemptPass == resetKey or attemptPass == lightKey):
                                          print("Invalid option")
                                          #make indicator light for panel to show when button
                                          #pressed, valid/invalid pin etc
                                          break
                                        
                                     else:
                                        password = attemptPass
                                        print("New Password: " + password)
                                        attemptPass = ""
                                        break
                            
                            elif (attemptPass == lightKey):
                                if(lightsOn):
                                    GPIO.output(HOME_LIGHT1, 0)
                                    GPIO.output(HOME_LIGHT2, 0)
                                    print("Lights off")
                                    lightsOn = False
                                    db.child().update({"LightStat":lightsOn})
                                else:
                                    GPIO.output(HOME_LIGHT1, 1)
                                    GPIO.output(HOME_LIGHT2, 1)
                                    print("lights on")
                                    lightsOn = True
                                    db.child().update({"LightStat":lightsOn})
                            
                            else:
                                print("Incorrect Password.")
                            
                            attemptPass = ""
                        
                        while(GPIO.input(ROW[i]) == 1):
                            time.sleep(0.2)
                            pass      
                GPIO.output(COL[j], 0)  
            
    except KeyboardInterrupt:
        GPIO.cleanup()
        print("\nApplication stopped!")

        
HomeSec.py
Displaying HomeSec.py.
